#!/usr/bin/python
"""
11 Jul 2011


"""

__author__  = "Francois-Jose Serra"
__email__   = "francois@barrabin.org"
__licence__ = "GPLv3"
__version__ = "0.0"

from utils import seq_utils
from ali_parser import parser


class Sequence():
    def __init__(self):
        self.


    def read(self, path, genetic_code=None, store='seq'):
        """
        """
        def check_header(line):
            return line.startswith('>')
        def get_sep (line):
            if ' |' in line:
                return ' |'
            elif '\t|' in line:
                return '\t|'
            elif '|' in line:
                return '|'
            elif '\t' in line:
                return '\t'
            elif ' ' in line:
                return ' '
            else:
                return '\n'
        sep = None
        seqs = {}
        with open(path) as fasta:
            for is_header, lines in groupby (fasta, key=check_header):
                text = ''.join (line.strip() for line in lines)
                if is_header:
                    if not sep:
                        sep = get_sep(text)
                    if sep == '\n':
                        head, descr = text[1:], ''
                    else:
                        head, descr = text[1:].split(sep, 1)
                    seqs [head] = {'descr': descr}
                else:
                    seq = text.replace('\n', '')
                    if genetic_code:
                        if len (text)%3 != 0:
                            seq = seq[:-(len(seq)%3)]
                        try:
                            seqs[head]['prot']  = translate(text, genetic_code,
                                                           stop=True)
                            seqs[head]['codon'] = [seq[i:i+3] for i in xrange(0,len(seq), 3)]
                        except KeyError: # in case sequence == 'Sequence unavailable'
                            del (seqs [head])
                            print >> stderr, 'No sequence found for ' + head
                            print >> stderr, text
                            continue
                    seqs [head][store] = seq
        
    